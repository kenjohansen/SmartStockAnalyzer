/*
 * Copyright (c) 2025 Ken Johansen. All rights reserved.
 * This file is part of Smart Portfolio Analyzer and is licensed under the MIT license.
 * See the LICENSE file in the project root for more information.
 */

@using SmartPortfolioAnalyzer.Core.Models
@using SmartPortfolioAnalyzer.Services.Analysis.Models

<div class="container-fluid">
    @if (Result != null)
    {
        <div class="row">
            <!-- Diversification Score Card -->
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Diversification Score</h5>
                    </div>
                    <div class="card-body">
                        <div class="progress" style="height: 30px;">
                            <div class="progress-bar bg-success" role="progressbar" style="width: @(Result.DiversificationScore * 100)%" aria-valuenow="@(Result.DiversificationScore * 100)" aria-valuemin="0" aria-valuemax="100">
                                @(Result.DiversificationScore * 100:F1)%
                            </div>
                        </div>
                        <div class="mt-3">
                            <span class="badge bg-secondary">Min: 0%</span>
                            <span class="badge bg-success">Max: 100%</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Distribution Charts Section -->
            <div class="col-md-8">
                <div class="row">
                    <!-- Sector Distribution Chart -->
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">Sector Distribution</h5>
                            </div>
                            <div class="card-body">
                                <div class="chart-container">
                                    <canvas id="sectorDistributionChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Region Distribution Chart -->
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">Region Distribution</h5>
                            </div>
                            <div class="card-body">
                                <div class="chart-container">
                                    <canvas id="regionDistributionChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Recommendations Section -->
            <div class="col-12 mt-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Diversification Recommendations</h5>
                    </div>
                    <div class="card-body">
                        <div class="list-group">
                            @foreach (var recommendation in Result.Recommendations)
                            {
                                <div class="list-group-item">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">@recommendation.Description</h6>
                                        <span class="badge bg-@GetPriorityBadgeClass(recommendation.Priority)">@recommendation.Priority</span>
                                    </div>
                                    <p class="mb-1">@recommendation.Recommendation</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    /// <summary>
    /// Component for displaying diversification analysis results.
    /// </summary>
    [Parameter]
    public DiversificationAnalysisResult? Result { get; set; }

    /// <summary>
    /// Gets the badge class for recommendation priority.
    /// </summary>
    /// <param name="priority">The recommendation priority level.</param>
    /// <returns>The CSS class for the priority badge.</returns>
    private string GetPriorityBadgeClass(int priority)
    {
        return priority switch
        {
            1 => "danger",
            2 => "warning",
            3 => "info",
            _ => "secondary"
        };
    }

    /// <summary>
    /// Initializes the sector distribution chart after the first render.
    /// </summary>
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && Result != null)
        {
            InitializeSectorDistributionChart();
            InitializeRegionDistributionChart();
        }
    }

    /// <summary>
    /// Initializes the sector distribution chart with sector weight data.
    /// </summary>
    private void InitializeSectorDistributionChart()
    {
        var ctx = document.getElementById("sectorDistributionChart").getContext("2d");
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: Result.Metrics.SectorDistribution.Keys.ToArray(),
                datasets: [{
                    label: 'Sector Weight',
                    data: Result.Metrics.SectorDistribution.Values.ToArray(),
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 1
                    }
                },
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Sector Distribution'
                    }
                }
            }
        });
    }

    /// <summary>
    /// Initializes the region distribution chart with region weight data.
    /// </summary>
    private void InitializeRegionDistributionChart()
    {
        var ctx = document.getElementById("regionDistributionChart").getContext("2d");
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: Result.Metrics.RegionDistribution.Keys.ToArray(),
                datasets: [{
                    label: 'Region Weight',
                    data: Result.Metrics.RegionDistribution.Values.ToArray(),
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 1
                    }
                },
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Region Distribution'
                    }
                }
            }
        });
    }
}
